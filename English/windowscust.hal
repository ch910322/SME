external function string 60 UserDefined(string,string);
external function Boolean HasCustomerSearchKey();
external function Boolean HasCategories();
external function Boolean HasDepartments();
external function Boolean HasStandardCommunicator();
external function Boolean CUVATNrColumn;
external function Boolean HasLimitedAccess();
external function Boolean HasCustomerStatusReport();
external outer function Boolean HasB2BCreateOffer();
external inner function Boolean SimplifiedSureties();


window SME_IVJRClass:3
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hs,v,v3,vm,vs,l;

  WindowBegin("Specify Invoice Journal",SME_IVJRClass,CGRcW,RcType);
  SetWRect(20,80,520,390);
  vs = 20;
  hs = 148;
  Tile(0,40,false,"",f1);

  v = 6; h = 150;
  EditFieldTL(h,v,150,"Invoice No.",M4Str,Normal,30,f1,false,0);
  v = v + 20;
  EditFieldTL(h,v,150,"Official No.",M4UStr,Normal,41,f6,false,0);
  v = v + 20;

  TileButtons(v,2);
  Tile(1,380,false,"1",f2);
  v = 6;
  vm = v;
  PeriodField(h,v,"Period");
  EditFieldTL(h,v+=vs, 150,"Credited Invoice Period",M4UStr,Normal,21,Period2Str2,false,PerSClass);
  EditFieldTL(h,v+=vs ,150,"Customer",M4UStr,Normal,50,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,70,"Customer Category",M4UStr,Normal,5,f3,false,CCatSClass);
  EditFieldTL(h,v+=vs ,70,"Classification Types",M4UStr,Normal,60,f5,false,CTypeSClass);
  EditFieldTL(h,v+=vs ,70,"Customer Classification",M4UStr,Normal,30,f4,false,CClassSClass);
  EditFieldTL(h,v+=vs ,70,"#Salesman#",M4UStr,Normal,10,AccStr,false,UserSClass);
  EditFieldTL(h,v+=vs ,50,"Sales Group",M4UStr,Normal,10,f14,false,SalesGroupSClass);
  EditFieldTL(h,v+=vs,250,"Tag/Object",M4UStr,Normal,60,ObjStr,false,ObjSClass);
  EditFieldTL(h,v+=vs,50,"Tag/Object Type",M4UStr,Normal,5,ObjType,false,OTSClass);
  EditFieldTL(h,v+=vs,250,"Tags/Objects (from Row)",M4UStr,Normal,60,f11,false,ObjSClass);
  EditFieldTL(h,v+=vs,50,"Project",M4UStr,Normal,20,FirstAcc,false,PRSClass);
  EditFieldTL(h,v+=vs,70,"Location",M4UStr,Normal,60,LastAcc,false,LocationSClass);
  EditFieldTL(h,v+=vs,50,"Payment Term",M4UStr,Normal,5,TransStr,false,PDSClass);
  EditFieldTL(h,v+=vs,50,"Orig. Customer",M4Code,Normal,20,f12,false,CUSClass);
  EditFieldTL(h,v3=(v+=vs),50,"Min Amount",M4Val,Normal,0,vals0,false,0);
  h = 320;
  v = vm + 10;

  ButtonFrame(h,v,123,5,"Status");
  CheckBox(h,v,0,"Not OKed",flags[1]);
  CheckBox(h,v+=16,0,"O_Ked",flags[2]);
  RadioButton(h,v+=16,0,0,"Include Disputed",flags[7]);
  RadioButton(h,v+=16,1,0,"Exclude Disputed",flags[7]);
  RadioButton(h,v+=16,2,0,"Disputed Only",flags[7]);
  EndFrame;

  v3 = v3 + 41;
  v = v3;
    vm = v;
    h = 148;
  ButtonFrame(h,v,123,3,"Function");
  RadioButton(h,v,0,0,"Overview",ArtMode);
  RadioButton(h,v+=16,1,0,"Detailed",ArtMode);
  RadioButton(h,v+=16,4,0,"Overview with Cur.",ArtMode);
  RadioButton(h,v+=16,5,0,"Overview with Items",ArtMode);
  EndFrame;

    h2 = 320;
    l = 160;
  ButtonFrame(h2,v=vm,l,5,"Sorting");
  RadioButton(h2,v,0,0,"Transaction Date",flags[10]);
  RadioButton(h2,v+=16,1,0,"Invoice No.",flags[10]);
  RadioButton(h2,v+=16,2,0,"Location (from Header)",flags[10]);
  RadioButton(h2,v+=16,3,0,"Overview with Official No.",flags[10]);
  RadioButton(h2,v+=16,4,0,"Invoice Date",flags[10]);
  EndFrame;
  Tile(2,330,false,"2",Stext);
  v = 6;
  EditFieldTL(h=150,v,100,"Item Group",M4UStr,Normal,21,Stext,false,ITSClass);
  EditFieldTL(h,v+=vs,150,"Item Classification", M4UStr,Normal,60,Comment,false,DISClass);
  EditFieldTL(h,v+=vs,100,"Item",M4UStr,Normal,41,f10,false,INSClass);
  EditFieldTL(h,v+=vs,100,"Sales Account",M4UStr,Normal,21,f7,false,AccSClass);
  EditFieldTL(h,v+=vs,100,"Debtors Account",M4UStr,Normal,21,f8,false,AccSClass);
  EditFieldTL(h,v+=vs,100,"Main Partner",M4UStr,Normal,20,f9,false,CUSClass);
  EditFieldTL(h,v+=vs,100,"#VAT# Code",M4UStr,Normal,100,f13,false,VATCodeSClass);
  //    EditFieldTL(h,v+=vs,50,"Order Class",M4UStr,Normal,5,Stext,false,OrderClassSClass); // no more strings to use....
  ButtonFrame(h=50,vm = (v+=40),123,4,"Invoice Type");
  CheckBox(h,v,0,"Invoices",flags[3]);
  CheckBox(h,v+=16,0,"Cash Notes",flags[4]);
  CheckBox(h,v+=16,0,"#Credit Notes#",flags[5]);
  CheckBox(h,v+=16,0,"I_nterest Inv.",flags[6]);
  CheckBox(h,v+=26,0,"Invoices affecting #S/L# only",flags[19]);
  StaticText(h+17,v+=30,"(ignore Invoice Types)",false);
  CheckBox(h=220,v=vm,0,"Show Comment",flags[11]);
  CheckBox(h,v+=16,0,"Show Base Currency 1 & 2 Totals",flags[12]);
  CheckBox(h,v+=16,0,"Fiscal Invoices only",flags[13]);
  CheckBox(h,v+=16,0,"Show Invalidated Invoices",flags[14]);
  CheckBox(h,v+=16,0,"Show #VAT# Amount",flags[15]);
  CheckBox(h,v+=16,0,"Not Printed Invoices only",flags[17]);
  CheckBox(h,v+=16,0,"Include Orig. Customer",flags[18]);
  CheckBox(h,v+=16,0,"Invoices with Total amount equal zero",flags[20]);
  CheckBox(h,v+=16,0,"Exported to Factoring only",flags[22]);
  CheckBox(h,v+=16,0,"Show Agreement No.",flags[24]);
  CheckBox(h,v+=16,0,"Show Due Date",flags[25]);
  CheckBox(h+=hs,v=vm,0,"Show Official No.",flags[16]);
  EndWindow;
end;

window VATMaskVATCodeTClass:3
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hs,v,v3,vm,vs,l;
  WindowBegin("VAT Mask VAT Codes",VATMaskVATCodeTClass,CGHBl,-);
  SetWRect(80,80,550,280);
  SetBlid(VATMaskVATCodeBlock);
  MatrixBegin(10,20,-30,-10,-,50);
  MatCol(1,25,"VAT Mask",0,VATMask,false,0);
  MatCol(1,-70,"VAT Code",0,VATCode,false,VATCodeSClass);
  EndMatrix;
  EndWindow;
end;

window B2BLoanApplicationDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,h2,h3,t,tilenr,vm,pos;
  string 255 label1,label2,label3,label4,label5;
  record B2BLoanApplicationVc LAr;
  record CredManTypeVc CMTr;

WindowBegin("Loan Application",B2BLoanApplicationDClass,CGview,-);
  SetWRect(64,80,959,300);
  UseView(B2BLoanApplicationVc);
  DynamicWindow;
  Sizeable(-1,-1,0,0);
  FormName(LoanAppForm);
  vs = 20; h=115; h2=385; h3=695;
  Tile(0,95,false,"",SerNr);
  EditField(h,v=6,100,"Ser. No.",Normal,SerNr,false,TSerSClass);
  EditField(h,v+=vs,80,"Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,130,"Reg. No",ViewOnly,CustRegNr1,false,0);
  EditField(h,v+=vs,130,"Manager",Normal,Manager,false,UserSClass);
  EditField(h,v+=vs,130,"Order Class",Normal,OrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,130,"Contact Name",Normal,ContactName,false,B2BLoanApp_ContactSClass);
  EditField(h,v+=vs,130,"Contact Email",Normal,ContacteMail,false,0);
  EditField(h,v+=vs,130,"Contact Mobile",Normal,ContactMobile,false,0);
  EditField(h,v+=vs,130,"Contact Telephone",Normal,ContactPhoneNo,false,0);
  v=v+vs;
  EditField(h,v+=vs,400,"Reason For Rejection",Normal,RejReason,false,0);


  EditField(h2,v=6,100,"Customer ID",Normal,CustCode,false,CUSClass);
  EditField(h2,v+=vs,130,"Customer Name",Normal,CustName,false,0);
  EditField(h2,v+=vs,130,"Customer Email",Normal,eMail,false,0);
  EditField(h2,v+=vs,130,"Customer Telephone",Normal,PhoneNo,false,0);
  EditField(h2,v+=vs,130,"Registration Date",Normal,RegDate,false,PasteCurDate);
  EditField(h2,v+=vs,130,"Company Status",Normal,CompStatus,false,LACompStatusSClass);//TODO SCLASS
  EditField(h2,v+=vs,130,"Industry",Normal,Industry,false,BNSClass);
  EditField(h2,v+=vs,130,"Payment Guarantee",Normal,PaymGuarant,false,0);
  EditField(h2,v+=vs,130,"Promissory Note With",Normal,Promisory,false,0);
  StaticText(h2-5,v+25,"Payment Guarantee",true);
  CheckBox(h2,v+=vs,0,"EDS Guarantee",EDSGuarant);
  
  //EditField(h2,v,-40,"Name",Normal,ManagerName,false,0);
  EditField(h3,v=6,80,"Type",Normal,Type,false,CredManTypeSClass);
  EditField(h3,v+=vs,80,"Total Amount",Normal,Sum,true,0);
  EditField(h3,v+=vs,80,"Months",Normal,Months,true,0);
  EditField(h3,v+=vs,60,"Monthly Rate %",Normal,InterestRate,true,0);
  CheckBox(h3+85,v,0,"Annual",AnnualRate);
  EditField(h3,v+=vs,80,"Monthly Payment Day",Normal,MonthlyPaymentDay,true,0);
  EditField(h3,v+=vs,80,"Grace Period, Months",Normal,PrincipleDelayMonths,false,0);
  EditField(h3,v+=vs,80,"Admin Fee",Normal,AdminFee,false,0);
  
  v = v + 20;
  HalPushButton(h3-90,v,h3+10,v+25,"B2BLoanAppCalculate","Calculate");
  HalPushButton(h3-90,v+30,h3+10,v+55,"B2BLoanAppEvaluate","Evaluate");
  
  ButtonFrame(h3+30,v=v+vs,120,3,"Evaluation");
  RadioButton(h3+30,v,0,0,"Not Evaluated",Evaluation);
  RadioButton(h3+30,v+=16,1,0,"Yes",Evaluation);  
  RadioButton(h3+30,v+=16,2,0,"No",Evaluation);  
  

  h3=h3-30;
  //ak_start
  if (GetWindowClass(CurWindow)=="B2BLoanApplicationDClass") then begin  
    GetWindowRecord(CurWindow,LAr);
  end;
  v=v+25;
  
  CMTr.Code=LAr.Type;
  if (ReadFirstMain(CMTr,1,true)) then begin
    switch (CMTr.LoanType) begin
	  case 2: //leasing
	    HalPushButton(h-50,v+=vs,h+70,v+20,"B2BLoanApplicationDClassOpenProperties","Assets");
    case 3: //Mortgage		
	    HalPushButton(h-50,v+=vs,h+70,v+20,"B2BLoanApplicationDClassOpenProperties","Pledges");
    otherwise
      
    end;
  end;
  
  tilenr = 1;
  TileButton(tilenr,"MNGMT/Board Mbr."); tilenr = tilenr + 1;
  TileButton(tilenr,"Surety"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Company Evaluation"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Person Evaluation"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Comments"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Shareholders"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Planned Fees"); tilenr = tilenr + 1;  
  TileButton(tilenr,"BO"); tilenr = tilenr + 1;  
  tilenr = 1;

  Tile(tilenr,290,true,tilenr,BoardMember1); tilenr = tilenr + 1;
  v = 6;
  StaticText(h=90,v=15,"Contact Code",false);
  StaticText(h+=100,v,"Name",false);
  StaticText(h+=140,v,"ID",false);
  StaticText(h+=100,v,"Date Of Birth",false);
  StaticText(h+=90,v,"Manager/Board",false);
  StaticText(h+=100,v,"Bankr.",false);
  StaticText(h+=80,v,"PEP",false);
  StaticText(h+=80,v,"Sanctions",false);
  v=v+13;
  StaticText(h=90,v,"",false);
  StaticText(h+=100,v,"",false);
  StaticText(h+=140,v,"",false);
  StaticText(h+=100,v,"",false);
  StaticText(h+=90,v,"Member Since",false);
  StaticText(h+=100,v,"Company",false);
  StaticText(h+=80,v,"",false);
  StaticText(h+=80,v,"",false);
  
  v = v + 20;
  EditField(h=100,v,60,"General manager",Normal,BoardMember1,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,BoardMember1Name,false,0);
  EditField(h+=140,v,90,"",Normal,BMID1,false,0);
  EditField(h+=110,v,70,"",Normal,BMDOB1,false,PasteCurDate);
  EditField(h+=90,v,70,"",Normal,BMSince1,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",BMBankr1);
  CheckBox(h+=80,v,0,"",BMPEP1);
  CheckBox(h+=80,v,0,"",BMSanctions1);
//  EditField(h+=140,v,60,"",Normal,BMDebt1,true,0);
  v = v + 30;
  EditField(h=100,v,60,"Board Member 1",Normal,BoardMember2,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,BoardMember2Name,false,0);
  EditField(h+=140,v,90,"",Normal,BMID2,false,0);
  EditField(h+=110,v,70,"",Normal,BMDOB2,false,PasteCurDate);
  EditField(h+=90,v,70,"",Normal,BMSince2,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",BMBankr2);
  CheckBox(h+=80,v,0,"",BMPEP2);
  CheckBox(h+=80,v,0,"",BMSanctions2);
//  EditField(h+440,v,60,"",Normal,BMDebt2,true,0);
  v = v + 30;
  EditField(h=100,v,60,"Board Member 2",Normal,BoardMember3,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,BoardMember3Name,false,0);
  EditField(h+=140,v,90,"",Normal,BMID3,false,0);
  EditField(h+=110,v,70,"",Normal,BMDOB3,false,PasteCurDate);
  EditField(h+=90,v,70,"",Normal,BMSince3,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",BMBankr3);
  CheckBox(h+=80,v,0,"",BMPEP3);
  CheckBox(h+=80,v,0,"",BMSanctions3);
//  EditField(h+440,v,60,"",Normal,BMDebt3,true,0);
  v = v + 30;
  EditField(h=100,v,60,"Board Member 3",Normal,BoardMember4,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,BoardMember4Name,false,0);
  EditField(h+=140,v,90,"",Normal,BMID4,false,0);
  EditField(h+=110,v,70,"",Normal,BMDOB4,false,PasteCurDate);
  EditField(h+=90,v,70,"",Normal,BMSince4,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",BMBankr4);
  CheckBox(h+=80,v,0,"",BMPEP4);
  CheckBox(h+=80,v,0,"",BMSanctions4);
//  EditField(h+440,v,60,"",Normal,BMDebt4,true,0);
  v = v + 30;
  EditField(h=100,v,60,"Board Member 4",Normal,BoardMember5,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,BoardMember5Name,false,0);
  EditField(h+=140,v,90,"",Normal,BMID5,false,0);
  EditField(h+=110,v,70,"",Normal,BMDOB5,false,PasteCurDate);
  EditField(h+=90,v,70,"",Normal,BMSince5,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",BMBankr5);
  CheckBox(h+=80,v,0,"",BMPEP5);
  CheckBox(h+=80,v,0,"",BMSanctions5);
//  EditField(h+440,v,60,"",Normal,BMDebt5,true,0);
  v = v + 30;
  EditField(h=100,v,60,"Board Member 5",Normal,Beneficiary,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"", Normal,BeneficiaryName,false,0);
  EditField(h+=140,v,90,"",Normal,BMID6,false,0);
  EditField(h+=110,v,70,"",Normal,BMDOB6,false,PasteCurDate);
  EditField(h+=90,v,70,"",Normal,BMSince6,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",BMBankr6);
  CheckBox(h+=80,v,0,"",BMPEP6);
  CheckBox(h+=80,v,0,"",BMSanctions6);
  
  Tile(tilenr,290,true,tilenr,MajorityOwner1); tilenr = tilenr + 1;  
  
  StaticText(h=60,v=15,"Contact Code",false);
  StaticText(h+120,v,"Name",false);
  StaticText(h+=340,v,"ID",false);
  StaticText(h+=130,v,"Unpledged Assets Teur",false);

  v = v + 30;
  
  EditField(h=80,v,60,"Guarantor 1",Normal,SuretyProvider1,false,B2BLoanApp_CUSClass);
  EditField(h+=80,v,200,"",Normal,Surety1Name,false,0);
  EditField(h+=220,v,100,"",Normal,Surety1ID,false,0);
  EditField(h+=140,v,120,"",Normal,Surety1TEUR,false,0);
  v = v + 30;

  EditField(h=80,v,60,"Guarantor 2",Normal,SuretyProvider2,false,B2BLoanApp_CUSClass);
  EditField(h+=80,v,200,"",Normal,Surety2Name,false,0);
  EditField(h+=220,v,100,"",Normal,Surety2ID,false,0);
  EditField(h+=140,v,120,"",Normal,Surety2TEUR,false,0);
  v = v + 30;

  EditField(h=80,v,60,"Guarantor 3",Normal,SuretyProvider3,false,B2BLoanApp_CUSClass);
  EditField(h+=80,v,200,"",Normal,Surety3Name,false,0);
  EditField(h+=220,v,100,"",Normal,Surety3ID,false,0);
  EditField(h+=140,v,120,"",Normal,Surety3TEUR,false,0);
  v = v + 30;

  EditField(h=80,v,60,"Guarantor 4",Normal,SuretyProvider4,false,B2BLoanApp_CUSClass);
  EditField(h+=80,v,200,"",Normal,Surety4Name,false,0);
  EditField(h+=220,v,100,"",Normal,Surety4ID,false,0);
  EditField(h+=140,v,120,"",Normal,Surety4TEUR,false,0);
  v = v + 30;

  EditField(h=80,v,60,"Guarantor 5",Normal,SuretyProvider5,false,B2BLoanApp_CUSClass);
  EditField(h+=80,v,200,"",Normal,Surety5Name,false,0);
  EditField(h+=220,v,100,"",Normal,Surety5ID,false,0);
  EditField(h+=140,v,120,"",Normal,Surety5TEUR,false,0);
  v = v + 30;

  EditField(h=80,v,60,"Guarantor 6",Normal,SuretyProvider6,false,B2BLoanApp_CUSClass);
  EditField(h+=80,v,200,"",Normal,Surety6Name,false,0);
  EditField(h+=220,v,100,"",Normal,Surety6ID,false,0);
  EditField(h+=140,v,120,"",Normal,Surety6TEUR,false,0);
  v = v + 30;

  

  Tile(tilenr,600,true,tilenr,Equity); tilenr = tilenr + 1;
  EditField(h=135,v=6,100,"Company Status",Normal,CompStatusEval,false,LACompStatusSClass);
  EditField(h,v+=vs,100,"Established In",Normal,Established,false,PasteCurDate);
  EditField(h,v+=vs,100,"Available Fin. Statements",Normal,AvailableFinStatementsText,false,0);
  EditField(h,v+=vs,100,"Turnover",Normal,Turnover,true,0);
  EditField(h,v+=vs,100,"Net Profit EUR",Normal,NetProfit,true,0);
  EditField(h,v+=vs,100,"Net Profit, %",Normal,NetProfitPrc,true,0);

  EditField(h2=465,v=6,100,"Total Assets EUR",Normal,TotalAssets,true,0);  
  EditField(h2,v+=vs,100,"Equity EUR",Normal,Equity,true,0);
  EditField(h2,v+=vs,100,"Equity %",Normal,EquityPrc,true,0);
  EditField(h2,v+=vs,100,"Current Assets",Normal,CurrentAssets,true,0);
  EditField(h2,v+=vs,100,"Current Liabilities",Normal,CurrentLiabilities,true,0);
  EditField(h2,v+=vs,100,"Current Ratio",Normal,CurRatioPrc,true,0);

/*  
  EditField(h2=365,v,100,"Working Capital",Normal,WorkingCapital,true,0);
  EditField(h3=595,v,100,"Short Term Liabilities",Normal,ShortTermLiabilities,true,0);
  
  SoftEditField(h2,v,100,"Returns on Sales",ViewOnly,"returnsonsales",true,0,M4Val,0);
  SoftEditField(h3,v,100,"Curr. Liquidity Ratio",ViewOnly,"currliquidityratio",true,0,M4Val,0);
  
  EditField(h2=365,v,100,"Bankruptcy Rating",Normal,BankruptcyRating,true,0);
  EditField(h,v+=vs,100,"Monthly Loan Payment",Normal,MonthlyLoadPayment,true,0);
  EditField(h2,v,100,"Current Debts",Normal,CurrentDebts,true,0);
  EditField(h3,v,100,"Last Debt Repayment",Normal,LastRepaymentDate,false,PasteCurDate); */

  CheckBox(h,v=130,0,"Ongoing Debts",OngoingDebts);
  CheckBox(h,v+=vs,0,"Last Debt Repayment",OngoingDebts);
  CheckBox(h,v+=vs,0,"Ongoing Asset Arrests",OngoingAssetArrests);
  CheckBox(h,v+=vs,0,"Ongoing Court Cases Defendant",OngoingCourtCases);
  
  CheckBox(h2,v=130,0,"Historical Asset Arrests",HistoricalAssetArrests);
  CheckBox(h2,v+=vs,0,"Historical Court Cases",HistoricalCourtCases);
  CheckBox(h2,v+=vs,0,"Active Default To Sodra",ActDefSodra);
  CheckBox(h2,v+=vs,0,"Shareholders Credit History",ShCredHist);
  
  h3 = 700;
  CheckBox(h3,v=130,0,"Spiderweb Negative Information",SpiderwebNeg);
  CheckBox(h3,v+=vs,0,"Sanctions",CESanctions);
  
  /*h3 = 565;
  CheckBox(h,v+=vs,0,"Ongoing Court Cases",OngoingCourtCases);
  CheckBox(h2,v,0,"Historical Court Cases",HistoricalCourtCases);
  CheckBox(h3,v,0,"Ongoing Asset Arrests",OngoingAssetArrests);
  CheckBox(h,v+=vs,0,"Historical Asset Arrests",HistoricalAssetArrests);
  CheckBox(h2,v,0,"Bankruptcy",BankruptcyFlag);
  CheckBox(h3,v,0,"Liquidation",LiquidationFlag);
  CheckBox(h,v+=vs,0,"Ownership Changes",OwnershipChanges);
  CheckBox(h2,v,0,"Publicity Information",Publicity);
  CheckBox(h3,v,0,"Being Sued",BeingSued);
  CheckBox(h,v+=vs,0,"Ongoing Debt Collections",DebtCollections);
  CheckBox(h2,v,0,"Unreliable Company",UnreliableComp);
  CheckBox(h3,v,0,"Available fin. statements",AvailableFinStatements);*/

  h3 = 665;
  Tile(tilenr,600,true,tilenr,Workplace); tilenr = tilenr + 1;//Person evaluation
  v=6;
  HalPushButton(h-50,v,h+70,v+20,"B2BLoanApplicationDClassOpenDebts","Debts");
  EditField(h,v+=vs+10,80,"Workplace",Normal,Workplace,false,B2BLoanApp_CUSClass);
  EditField(h2,v,300,"",Normal,WorkplaceName,false,0);
  
  EditField(h,v+=vs,80,"Average Income",Normal,AvgIncome,true,0);
  EditField(h2,v,80,"Other Obligations",Normal,OtherObligations,true,0);
  EditField(h3+30,v,80,"Curr. Avg. Loan Expenses",Normal,CurrAvgLoanExp,true,0);
  
  SoftEditField(h,v+=vs,80,"Affordability",ViewOnly,"affordability",true,0,M4Val,0);
  SoftEditField(h3+30,v,80,"Monthly payment/Avg. income 6 m",ViewOnly,"monthpayperavgincome",true,0,M4Val,0);

  Tile(tilenr,400,false,tilenr,Math2); tilenr = tilenr + 1;
  StaticText(30,v=30,"Comments",false);
  TextField(100,v-5,-20,270,Math2,0);

  Tile(tilenr,600,false,tilenr,Math2); tilenr = tilenr + 1;
  
  v = 16;
  StaticText(h=90,v=15,"Contact",false);
  StaticText(h+=100,v,"Name",false);
  StaticText(h+=140,v,"ID",false);
  StaticText(h+=100,v,"Shares, %",false);
  StaticText(h+=90,v,"Shareholder",false);
  StaticText(h+=100,v,"Bankr.",false);
  StaticText(h+=100,v,"Active",false);
  StaticText(h+=80,v,"PEP",false);
  StaticText(h+=80,v,"Sanctions",false);
  v=v+13;
  StaticText(h=90,v,"",false);
  StaticText(h+=100,v,"",false);
  StaticText(h+=140,v,"",false);
  StaticText(h+=100,v,"",false);
  StaticText(h+=90,v,"Since",false);
  StaticText(h+=100,v,"Company",false);
  StaticText(h+=100,v,"debts",false);
  StaticText(h+=80,v,"",false);
  StaticText(h+=80,v,"",false);
  
  /*RecordField(ShareHolder1Code,M4Code,20,CUVc);
  RecordField(ShareHolder1Name,M4Str,200,0);
  RecordField(ShareHolder1ID,M4Str,100,0);
  RecordField(ShareHolder1Shares,M4Val,0,0);
  RecordField(ShareHolder1Since,M4Date,0,0);
  RecordField(ShareHolder1Bankr,M4Int,0,0); 
  RecordField(ShareHolder1ActDeb,M4Int,0,0); 
  RecordField(ShareHolder1PEP,M4Int,0,0); 
  RecordField(ShareHolder1Sanctions,M4Int,0,0);*/
  
  v = v + 20;
  EditField(h=100,v,60,"Shareholder 1",Normal,ShareHolder1Code,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,ShareHolder1Name,false,0);
  EditField(h+=140,v,90,"",Normal,ShareHolder1ID,false,0);
  EditField(h+=110,v,70,"",Normal,ShareHolder1Shares,false,0);
  EditField(h+=90,v,70,"",Normal,ShareHolder1Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",ShareHolder1Bankr);
  CheckBox(h+=100,v,0,"",ShareHolder1ActDeb);
  CheckBox(h+=80,v,0,"",ShareHolder1PEP);
  CheckBox(h+=80,v,0,"",ShareHolder1Sanctions);
  v = v + 30;
  EditField(h=100,v,60,"Shareholder 2",Normal,ShareHolder2Code,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,ShareHolder2Name,false,0);
  EditField(h+=140,v,90,"",Normal,ShareHolder2ID,false,0);
  EditField(h+=110,v,70,"",Normal,ShareHolder2Shares,false,0);
  EditField(h+=90,v,70,"",Normal,ShareHolder2Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",ShareHolder2Bankr);
  CheckBox(h+=100,v,0,"",ShareHolder2ActDeb);
  CheckBox(h+=80,v,0,"",ShareHolder2PEP);
  CheckBox(h+=80,v,0,"",ShareHolder2Sanctions);
  v = v + 30;
  EditField(h=100,v,60,"Shareholder 3",Normal,ShareHolder3Code,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,ShareHolder3Name,false,0);
  EditField(h+=140,v,90,"",Normal,ShareHolder3ID,false,0);
  EditField(h+=110,v,70,"",Normal,ShareHolder3Shares,false,0);
  EditField(h+=90,v,70,"",Normal,ShareHolder3Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",ShareHolder3Bankr);
  CheckBox(h+=100,v,0,"",ShareHolder3ActDeb);
  CheckBox(h+=80,v,0,"",ShareHolder3PEP);
  CheckBox(h+=80,v,0,"",ShareHolder3Sanctions);
  v = v + 30;
  EditField(h=100,v,60,"Shareholder 4",Normal,ShareHolder4Code,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,ShareHolder4Name,false,0);
  EditField(h+=140,v,90,"",Normal,ShareHolder4ID,false,0);
  EditField(h+=110,v,70,"",Normal,ShareHolder4Shares,false,0);
  EditField(h+=90,v,70,"",Normal,ShareHolder4Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",ShareHolder4Bankr);
  CheckBox(h+=100,v,0,"",ShareHolder4ActDeb);
  CheckBox(h+=80,v,0,"",ShareHolder4PEP);
  CheckBox(h+=80,v,0,"",ShareHolder4Sanctions);
  v = v + 30;
  EditField(h=100,v,60,"Shareholder 5",Normal,ShareHolder5Code,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,ShareHolder5Name,false,0);
  EditField(h+=140,v,90,"",Normal,ShareHolder5ID,false,0);
  EditField(h+=110,v,70,"",Normal,ShareHolder5Shares,false,0);
  EditField(h+=90,v,70,"",Normal,ShareHolder5Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",ShareHolder5Bankr);
  CheckBox(h+=100,v,0,"",ShareHolder5ActDeb);
  CheckBox(h+=80,v,0,"",ShareHolder5PEP);
  CheckBox(h+=80,v,0,"",ShareHolder5Sanctions);
  v = v + 30;
  EditField(h=100,v,60,"Shareholder 6",Normal,ShareHolder6Code,false,B2BLoanApp_CUSClass);
  EditField(h+=90,v,110,"",Normal,ShareHolder6Name,false,0);
  EditField(h+=140,v,90,"",Normal,ShareHolder6ID,false,0);
  EditField(h+=110,v,70,"",Normal,ShareHolder6Shares,false,0);
  EditField(h+=90,v,70,"",Normal,ShareHolder6Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",ShareHolder6Bankr);
  CheckBox(h+=100,v,0,"",ShareHolder6ActDeb);
  CheckBox(h+=80,v,0,"",ShareHolder6PEP);
  CheckBox(h+=80,v,0,"",ShareHolder6Sanctions);
  
  Tile(tilenr,600,false,tilenr,Math); tilenr = tilenr + 1;
  
  MatrixBegin(10,v=24,-50,-20,-,99);
  Flip(0);
  MatCol(t=1,32,"Item",0,ArtCode,false,INSClass);
  MatCol(t,100,"Qty",0,Quant,true,0);
  MatCol(t,160,"Type",0,ChargeType,false,SetSClass);
  MatCol(t,310,"Description",0,Comment,false,0);
  Flip(1);
  MatCol(t,-240,"Unit Price",0,Price,true,0);
  MatCol(t,-140,"%",0,vRebate,true,0);
  MatCol(t,-100,"Sum",0,Sum,true,0);
  Flip(2);
  MatCol(t,-200,"Invoice Date",0,InvDate,true,PasteCurDate);
  MatCol(t,-100,"Sum",0,Sum,true,0);
  Flip(3);
  MatCol(t,-200,"Min Sum",0,MinSum,true,0);
  MatCol(t,-100,"Max Sum",0,MaxSum,true,0);
  EndMatrix;
  vs = 22;
  v = 24; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  InsertRowTest;
  DeleteRowTest;
  
  Tile(tilenr,600,false,tilenr,Beneficial1Name); tilenr = tilenr + 1;
  
  v = 16;
  StaticText(h=90,v,"Name",false);
  StaticText(h+=150,v,"Shares, %",false);
  StaticText(h+=90,v,"Shareholder",false);
  StaticText(h+=100,v,"Bankr.",false);
  StaticText(h+=80,v,"PEP",false);
  StaticText(h+=80,v,"Sanctions",false);
  v=v+23;
  StaticText(h=90,v,"",false);
  StaticText(h+=150,v,"",false);
  StaticText(h+=90,v,"Since",false);
  StaticText(h+=100,v,"Company",false);
  StaticText(h+=80,v,"",false);
  StaticText(h+=80,v,"",false);
  
  v = v + 20;
  EditField(h=100,v,130,"Beneficial 1",Normal,Beneficial1Name,false,0);
  EditField(h+=150,v,70,"",Normal,Beneficial1Shares,false,0);
  EditField(h+=90,v,70,"",Normal,Beneficial1Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",Beneficial1Bankr);
  CheckBox(h+=80,v,0,"",Beneficial1PEP);
  CheckBox(h+=80,v,0,"",Beneficial1Sanctions);
  v = v + 30;
  EditField(h=100,v,130,"Beneficial 2",Normal,Beneficial2Name,false,0);
  EditField(h+=150,v,70,"",Normal,Beneficial2Shares,false,0);
  EditField(h+=90,v,70,"",Normal,Beneficial2Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",Beneficial2Bankr);
  CheckBox(h+=80,v,0,"",Beneficial2PEP);
  CheckBox(h+=80,v,0,"",Beneficial2Sanctions);
  v = v + 30;
  EditField(h=100,v,130,"Beneficial 3",Normal,Beneficial3Name,false,0);
  EditField(h+=150,v,70,"",Normal,Beneficial3Shares,false,0);
  EditField(h+=90,v,70,"",Normal,Beneficial3Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",Beneficial3Bankr);
  CheckBox(h+=80,v,0,"",Beneficial3PEP);
  CheckBox(h+=80,v,0,"",Beneficial3Sanctions);
  v = v + 30;
  EditField(h=100,v,130,"Beneficial 4",Normal,Beneficial4Name,false,0);
  EditField(h+=150,v,70,"",Normal,Beneficial4Shares,false,0);
  EditField(h+=90,v,70,"",Normal,Beneficial4Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",Beneficial4Bankr);
  CheckBox(h+=80,v,0,"",Beneficial4PEP);
  CheckBox(h+=80,v,0,"",Beneficial4Sanctions);
  v = v + 30;
  EditField(h=100,v,130,"Beneficial 5",Normal,Beneficial5Name,false,0);
  EditField(h+=150,v,70,"",Normal,Beneficial5Shares,false,0);
  EditField(h+=90,v,70,"",Normal,Beneficial5Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",Beneficial5Bankr);
  CheckBox(h+=80,v,0,"",Beneficial5PEP);
  CheckBox(h+=80,v,0,"",Beneficial5Sanctions);
  v = v + 30;
  EditField(h=100,v,130,"Beneficial 6",Normal,Beneficial6Name,false,0);
  EditField(h+=150,v,70,"",Normal,Beneficial6Shares,false,0);
  EditField(h+=90,v,70,"",Normal,Beneficial6Since,false,PasteCurDate);
  CheckBox(h+=100,v,0,"",Beneficial6Bankr);
  CheckBox(h+=80,v,0,"",Beneficial6PEP);
  CheckBox(h+=80,v,0,"",Beneficial6Sanctions);

  SpecialMenu("Fill Data from rekvizitai.lt",' ',1,"");
  SpecialMenu("Fill Data from SoDra",' ',2,"");
  SpecialMenu("Get Company Credit Data",' ',3,"");
  SpecialMenu("Get Surety Provider Data",' ',4,"");
  SpecialMenu("Evaluation Report",' ',5,"DoEvalReportDsm");
  SpecialMenu("Customer Status",'e',6,"CUStatusB2BLoanAppDsm");
  SpecialMenu("Fill Data from Creditinfo.lt",'',6,"GetCreditinfoStatDsm");
  SpecialMenu("Invite additional Surety Provider",'',6,"InviteSuretyDsm");
  SpecialMenu("Get Property Data",'',6,"B2BAppGetPropertyDataDsm");
  
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0); 
  SpecialMenu("E-mail",' ',1,""); 
  SpecialMenu("Credit Agreement",' ',1,"B2BLoanAppCreateCredManDsm"); 
  if (HasB2BCreateOffer) then begin  
    SpecialMenu("Offer Email",' ',1,"B2BLoanApplicationMakeEmailOffer"); 
  end;

  EndWindow;
end;
