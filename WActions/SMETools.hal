
global
function Boolean CanEditCredManCreateDate()
begin
  CanEditCredManCreateDate = true;
end;

global
function Boolean HasPaymentWithoutRecons()
begin
  HasPaymentWithoutRecons = true;
end;

global
function Boolean SimplifiedSureties()
begin
  SimplifiedSureties = true;
end;

global
function Boolean UseCredManStatus()
begin
  UseCredManStatus = true;
  return;
end;

global
function Boolean CheckForActiveAgreement(record CredManVc CredManr)
begin
  Boolean res;

  res = true;
  if (CredManr.Status<3) then begin
    res = false;
  end;

  CheckForActiveAgreement = res;
  return;
end;

global
function Boolean CanCredManMakePayment(record CredManVc CredManr)
begin
  Boolean res;

  if (CredManr.Status>=2) then begin
    res = true;
  end;

  CanCredManMakePayment = res;
  return;
end;

global
function Boolean CanCreateSingleAgreementInvoice(record CredManVc CredManr,var Date ed)
begin
  Boolean res;
  if (CredManr.OKFlag==1 and CredManr.Approved==1) then begin
    res = true;
  end else begin
    if (CredManr.Approved==1) then begin
      ed = AddDay(CredManr.startDate,1);
      res = true;
    end;
  end;

  CanCreateSingleAgreementInvoice = res;
  return;
end;


global
function Boolean MailTextRegisterSClassOnOpenWindow(Integer wn)
begin
  Array string 255 astr;
  Integer i,acnt;
  Boolean res;
  
  SetListString(wn,len("Credit Note"),"Credit Note",false); 
  res = inner.MailTextRegisterSClassOnOpenWindow(wn);   
  MailTextRegisterSClassOnOpenWindow = false;
  return;
end;

function Boolean MailTextDClassRegisterEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record MailTextVc MailTextr;
  
  res = true;
  if (changedf) then begin
    DeselectWindow(wn,false);
    GetWindowRecord(wn,MailTextr);
    if (MailTextr.Register=="Credit Note") then begin
      MailTextr.FileName = "IVCreditVc";
    end else begin
      MailTextr.FileName = StringSetFromString(-3,MailTextr.Register);
    end;
    PutWindowRecord(wn,MailTextr);
  end;
  MailTextDClassRegisterEFAfter = res;
  return;
end;

global
function Boolean MailTextDClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
begin
  Boolean res;
  
  res = true;
  switch (fieldname) begin
    case "Register": res = MailTextDClassRegisterEFAfter(wn,changed!=0);
    otherwise
      res = inner.MailTextDClassAfterEditField(wn,fieldname,fn,rownr,changed);
  end;
  MailTextDClassAfterEditField = res;
  return;
end;
